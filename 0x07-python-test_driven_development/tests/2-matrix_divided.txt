# 2-matrix_divided.txt
===============================
 How to use 2-matrix_divided.txt
===============================

This module provides a function called `matrix_divided(matrix, div)` for dividing all elements of a matrix by a given number.

Function Signature
==================

```matrix_divided(matrix, div):
    """
    Divides all elements of a matrix by a given number and returns a new matrix.

    Args:
        matrix (list of lists): The matrix containing integers or floats.
        div (int or float): The number to divide the matrix elements by.

    Returns:
        list of lists: The new matrix with elements divided by div, rounded to 2 decimal places.

    Raises:
        TypeError: If matrix is not a list of lists of integers or floats.
        TypeError: If each row of the matrix does not have the same size.
        TypeError: If div is not a number (integer or float).
        ZeroDivisionError: If div is equal to 0.

    Examples:
        >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
        >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
        >>> matrix_divided(matrix, 2)
        [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

        >>> matrix = [[1, 2], [3, 4], [5, 6]]
        >>> matrix_divided(matrix, 0)
        Traceback (most recent call last):
        ZeroDivisionError: division by zero


The divider is infinit `div = 10`

    	    >>> matrix = [[10, 20, 30]]
	    >>> matrix_divided(matrix,(float('inf')))
	    [[1.0, 2.0, 3.0]]

Insupported type of Matrices
============================

``matrix`` must be a list of lists of ints/floats

    	   >>> print(matrix_divided("not a list", 7))
    	   Traceback (most recent call last):
    	   TypeError: matrix must be a matrix (list of lists) of integers/floats

  Empty list:

  	   >>> print(matrix_divided([], 3))
    	   Traceback (most recent call last):
    	   TypeError: matrix must be a matrix (list of lists) of integers/floats


Rows are the same size

    >>> matrix = [[0, 1],[2, 3, 4]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Insupported type of Divisors
============================

The parameter ``div`` must be either an int or float.

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, "not a int or float")
    Traceback (most recent call last):
    TypeError: div must be a number


The parameter ``div`` must be different from zero
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero


Missing One or all arguments
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'


    >>> matrix_divided(2)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
